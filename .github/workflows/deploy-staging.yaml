name: deploy-staging

on:
  push:
    tags:
      - "stag-*"

env:
  BEACON_URL: ${{ secrets.BEACON_URL }}
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  GLASSNODE_API_KEY: ${{ secrets.GLASSNODE_API_KEY }}
  GETH_URL: ${{ secrets.GETH_URL }}

jobs:
  wait-on-build:
    name: wait on build
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deploy-staging to succeed
        uses: lewagon/wait-on-check-action@v1.1.2
        with:
          ref: ${{ github.ref }}
          check-name: build
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
  # # test:
  # #   runs-on: ubuntu-latest
  # #   steps:
  # #     - uses: actions/checkout@v3
  # #     - name: Build
  # #       run: cargo build
  # #     - name: Run tests
  # #       run: cargo test
  # build:
  #   runs-on: ubuntu-latest
  #   # needs: wait-on-build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Scaleway Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: rg.nl-ams.scw.cloud/ultrasoundmoney
  #         username: ${{ secrets.SCALEWAY_API_KEY }}
  #         password: ${{ secrets.SCALEWAY_API_KEY }}
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs
  #         tags: |
  #           type=sha,prefix=
  #           type=raw,value=latest
  #     - name: Docker build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  deploy-sync-beacon-states-dev:
    name: deploy dev sync-beacon-states
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: -n dev set image cronjob/sync-beacon-states sync-beacon-states=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: -n dev create job --from=cronjob/sync-beacon-states sync-beacon-states-${{ steps.vars.outputs.sha_short }}
  deploy-sync-beacon-states:
    name: deploy sync-beacon-states
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image cronjob/sync-beacon-states sync-beacon-states=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: create job --from=cronjob/sync-beacon-states sync-beacon-states-${{ steps.vars.outputs.sha_short }}
  deploy-update-validator-rewards:
    name: deploy update-validator-rewards
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image cronjob/update-validator-rewards update-validator-rewards=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: create job --from=cronjob/update-validator-rewards update-validator-rewards-${{ steps.vars.outputs.sha_short }}
  deploy-update-supply-projection-inputs:
    name: deploy update-supply-projection-inputs
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image cronjob/update-supply-projection-inputs update-supply-projection-inputs=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: create job --from=cronjob/update-supply-projection-inputs update-supply-projection-inputs-${{ steps.vars.outputs.sha_short }}
  deploy-update-issuance-breakdown:
    name: deploy update-issuance-breakdown
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image cronjob/update-issuance-breakdown update-issuance-breakdown=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: create job --from=cronjob/update-issuance-breakdown update-issuance-breakdown-${{ steps.vars.outputs.sha_short }}
  deploy-sync-execution-supply-deltas:
    name: deploy sync-execution-supply-deltas
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image deployment/sync-execution-supply-deltas sync-execution-supply-deltas=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: Verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: rollout status deployment/sync-execution-supply-deltas
  deploy-update-total-supply:
    name: deploy update-total-supply
    runs-on: ubuntu-latest
    needs: wait-on-build
    steps:
      - uses: actions/checkout@master
      - name: Make short SHA available
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: deploy
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: set image cronjob/update-total-supply update-total-supply=rg.nl-ams.scw.cloud/ultrasoundmoney/eth-analysis-rs:${{ steps.vars.outputs.sha_short }}
      - name: run job
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA_STAG }}
          command: create job --from=cronjob/update-total-supply update-total-supply-${{ steps.vars.outputs.sha_short }}
